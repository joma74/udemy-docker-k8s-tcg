sudo: required
services:
  - docker

language: generic

env:
  global:
    - GCP_PROJECT_ID=udemy-docker-k8s-tcg-2
    - IMAGE_PROD_ON_REPO_BASE=eu.gcr.io/${GCP_PROJECT_ID}/
    - IMAGE_NAME_BASE=joma74/udemy-docker-k8s-tcg-2/fibonacci-calc/
    - IMAGE_PARTICLENAME_DEV=dev
    - IMAGE_PARTICLENAME_PROD=prod
    - IMAGE_NAME_REDIS=redis/
    - IMAGE_NAME_REDIS_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_REDIS}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_REDIS_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_REDIS}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_REDIS_GCP_PROD=${IMAGE_PROD_ON_REPO_BASE}${IMAGE_NAME_REDIS_PROD}
    - IMAGE_NAME_POSTGRES=postgres/
    - IMAGE_NAME_POSTGRES_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_POSTGRES}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_POSTGRES_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_POSTGRES}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_POSTGRES_GCP_PROD=${IMAGE_PROD_ON_REPO_BASE}${IMAGE_NAME_POSTGRES_PROD}
    - IMAGE_NAME_PROXY=proxy/
    - IMAGE_NAME_PROXY_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_PROXY}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_PROXY_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_PROXY}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_FRONTEND=frontend/
    - IMAGE_NAME_FRONTEND_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_FRONTEND}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_FRONTEND_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_FRONTEND}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_FRONTEND_GCP_PROD=${IMAGE_PROD_ON_REPO_BASE}${IMAGE_NAME_FRONTEND_PROD}
    - IMAGE_NAME_SERVER=server/
    - IMAGE_NAME_SERVER_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_SERVER}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_SERVER_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_SERVER}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_SERVER_GCP_PROD=${IMAGE_PROD_ON_REPO_BASE}${IMAGE_NAME_SERVER_PROD}
    - IMAGE_NAME_WORKER=worker/
    - IMAGE_NAME_WORKER_DEV=${IMAGE_NAME_BASE}${IMAGE_NAME_WORKER}${IMAGE_PARTICLENAME_DEV}
    - IMAGE_NAME_WORKER_PROD=${IMAGE_NAME_BASE}${IMAGE_NAME_WORKER}${IMAGE_PARTICLENAME_PROD}
    - IMAGE_NAME_WORKER_GCP_PROD=${IMAGE_PROD_ON_REPO_BASE}${IMAGE_NAME_WORKER_PROD}
    - CLUSTER_REGION=europe-west1
    - CLUSTER_NAME=udemy-docker-k8s-tcg-2-cluster
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1 # prevent gcloud from prompting, see https://cloud.google.com/sdk/gcloud/reference/#--quiet
    - GIT_SHA=$(git rev-parse HEAD)

before_install:
  - openssl aes-256-cbc -K $encrypted_36fc87176ac2_key -iv $encrypted_36fc87176ac2_iv -in travisci-deployer_udemy-docker-k8s-tcg-2_key.json.enc -out travisci-deployer_udemy-docker-k8s-tcg-2_key.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null
  - source "$HOME/google-cloud-sdk/path.bash.inc" # Promote gcloud to PATH top priority (prevent using old version fromt travis)
  - gcloud components update kubectl # Ensure that the latest version of kubectl is installed
  - |
    set -ex;
      ./bin/configgcloudaccess.sh
    set +ex;

script:
  - |
    set -ex;
      ./bin/buildimages_any_dev.sh
    set +ex;
  - docker run -e CI=true "${IMAGE_NAME_FRONTEND_DEV}" yarn run test
  - |
    set -ex;
      ./bin/buildimages_any_prod.sh; \
      ./bin/pushimages_gcp_prod.sh; \
      ./bin/execkubectlcommands.sh;
    set +ex;

branches:
  only:
    - fibonacci-calc-parent

notifications:
  email:
    recipients:
      - dev-mails@gmx.net
